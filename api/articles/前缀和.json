{"title":"前缀和","uid":"7e125c2fcf5388ca1ef0a457d9c6ee91","slug":"前缀和","date":"2023-11-07T12:41:10.000Z","updated":"2024-12-08T18:10:10.232Z","comments":true,"path":"api/articles/前缀和.json","keywords":null,"cover":null,"content":"<h1 id=\"前缀和\"><a href=\"#前缀和\" class=\"headerlink\" title=\"前缀和\"></a>前缀和</h1><h2 id=\"一维前缀和\"><a href=\"#一维前缀和\" class=\"headerlink\" title=\"一维前缀和\"></a>一维前缀和</h2><p>1.定义</p>\n<p>对于一维前缀和来说，前缀和是这个数组的某个下标之前的（包括当前下标对应的元素）所有元素之和。</p>\n<ul>\n<li><p>声明一个数组 a[]。</p>\n</li>\n<li><p>数组 a[]的前缀和数组声明为 sum[]。</p>\n<p>根据前缀和数组定义可知每一项的值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum[1]=a[1]</span><br><span class=\"line\">sum[2]=a[1]+a[2]</span><br><span class=\"line\">...</span><br><span class=\"line\">sum[i]=a[1]+a[2]+...+a[i]</span><br><span class=\"line\">...</span><br><span class=\"line\">sum[n]=a[1]+a[2]+...+a[n]</span><br></pre></td></tr></table></figure>\n\n<p>通过上述递推式我们可以得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum[i−1]=a[1]+a[2]+a[3]+...+a[i−1]</span><br><span class=\"line\">sum[i]=a[1]+a[2]+a[3]+...+a[i−1]+a[i]</span><br></pre></td></tr></table></figure>\n\n<p>那么前缀和的递推式就可以写成：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum[i]=sum[i−1]+a[i]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>2.前缀和的作用</p>\n<p>利用前缀和可以快速求得区间和。</p>\n<p>例如：</p>\n<p>数组a:存储元素</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">元素</th>\n<th>1</th>\n<th>3</th>\n<th>6</th>\n<th>5</th>\n<th>4</th>\n<th>2</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>下标</strong></td>\n<td><strong>1</strong></td>\n<td><strong>2</strong></td>\n<td><strong>3</strong></td>\n<td><strong>4</strong></td>\n<td><strong>5</strong></td>\n<td><strong>6</strong></td>\n</tr>\n</tbody></table>\n<p>数组sum: sum[i] &#x3D; sum[i-1] + a[i]</p>\n<table>\n<thead>\n<tr>\n<th>元素</th>\n<th>1</th>\n<th>4</th>\n<th>10</th>\n<th>15</th>\n<th>19</th>\n<th>21</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>下标</strong></td>\n<td><strong>1</strong></td>\n<td><strong>2</strong></td>\n<td><strong>3</strong></td>\n<td><strong>4</strong></td>\n<td><strong>5</strong></td>\n<td><strong>6</strong></td>\n</tr>\n</tbody></table>\n<p>有如下问题：</p>\n<p>对于数组a从第L个数加到第R个数得和是多少？累加区间为[L, R]。</p>\n<p>如果用for循环来写的话，时间复杂度为O(n)。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int s = 0;</span><br><span class=\"line\">for(int i = L;i &lt;= R;i++) s = s + a[i];</span><br></pre></td></tr></table></figure>\n\n<p>但是如果用前缀和来写的话，就可以把时间复杂度降为O(1)。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int s = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">s = sum[R] - sum[L-1]；</span><br></pre></td></tr></table></figure>\n\n\n\n<p>例如当 L&#x3D;2，R&#x3D;6时，s&#x3D;sum[6]−sum[1]&#x3D;20</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">const int N = 1e5 + 10;  // 定义常量N，表示数组长度的上限</span><br><span class=\"line\">int sum[N];  // 定义数组sum，用于存储前缀和</span><br><span class=\"line\"></span><br><span class=\"line\">int main() </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n, k, x;</span><br><span class=\"line\">    cin &gt;&gt; n;  // 输入数组长度</span><br><span class=\"line\"></span><br><span class=\"line\">    // 计算前缀和</span><br><span class=\"line\">    for(int i = 1; i &lt;= n; i++) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; x;  // 输入数组元素</span><br><span class=\"line\">        sum[i] = sum[i - 1] + x;   // 计算前缀和并存储到数组sum中</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; k;  // 输入查询次数k</span><br><span class=\"line\">    while(k--) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;  // 输入查询区间[l,r]</span><br><span class=\"line\"></span><br><span class=\"line\">        // 输出区间和，利用前缀和数组sum进行快速计算</span><br><span class=\"line\">        cout &lt;&lt; sum[r] - sum[l - 1] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h1><h3 id=\"1-一维前缀和\"><a href=\"#1-一维前缀和\" class=\"headerlink\" title=\"1.一维前缀和\"></a>1.一维前缀和</h3><h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>对于一个有 n** 个元素的数组进行 k<em>k</em> 次区间求和。</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行：一个正整数 n； 第二行：n个正整数，表示数组中的 n个元素，每个整数不超过 10000，数值之间用一个空格分隔； 第三行：一个正整数 k，表示进行 k 次区间求和； 接下来 k行：每行两个整数 l和 r，表示计算第 l个数组元素到第 r个数组元素的和，包括第 l个和第 r个。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>共 k行，每行对应一次求和的结果。</p>\n<h4 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h4><h5 id=\"输入数据-1\"><a href=\"#输入数据-1\" class=\"headerlink\" title=\"输入数据 1\"></a>输入数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">1 2 3 4 5 6 7 8 9 10</span><br><span class=\"line\">3</span><br><span class=\"line\">1 3</span><br><span class=\"line\">1 5</span><br><span class=\"line\">6 10</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-1\"><a href=\"#输出数据-1\" class=\"headerlink\" title=\"输出数据 1\"></a>输出数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">15</span><br><span class=\"line\">40</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h5><ul>\n<li>对于 100% 的数据，1≤l≤r≤n</li>\n<li>对于 50% 的数据，1≤n,k≤1000</li>\n<li>对于 100% 的数据，1≤n,k≤100000</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum[N];</span><br><span class=\"line\"></span><br><span class=\"line\">    sum[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> num;</span><br><span class=\"line\">        cin &gt;&gt; num;</span><br><span class=\"line\">        sum[i + <span class=\"number\">1</span>] = sum[i] + num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> k;</span><br><span class=\"line\">    cin &gt;&gt; k;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(k--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> res = sum[r] - sum[l - <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        cout &lt;&lt; res &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-dash与机器人\"><a href=\"#2-dash与机器人\" class=\"headerlink\" title=\"2.dash与机器人\"></a>2.dash与机器人</h3><h4 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>dash学长发明了一个机器人在数轴上运动，现在有 n 条移动指令需要机器人执行，分别为 a1,a2,…,an。 + 代表正向移动，− 代表反向移动，每条移动指令的规则如下：</p>\n<ul>\n<li><p>移动 a<sub>1</sub>的距离。</p>\n</li>\n<li><p>移动 a<sub>1</sub> 的距离，再移动 a<sub>2</sub> 的距离。</p>\n<p>……</p>\n</li>\n<li><p>移动 a<sub>1</sub> 的距离，再移动 a<sub>2</sub> 的距离，……，移动 a<sub>n</sub> 的距离。</p>\n</li>\n</ul>\n<p>请问最远能移动到数轴的正向位置。</p>\n<h4 id=\"输入格式-1\"><a href=\"#输入格式-1\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行为一个正整数 n，代表有 n条指令 。</p>\n<p>第二行为 n 个正整数 a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub>，代表有 n 条指令。</p>\n<h4 id=\"输出格式-1\"><a href=\"#输出格式-1\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行，一个整数表示答案。</p>\n<h4 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例\"></a>样例</h4><h5 id=\"输入数据-1-1\"><a href=\"#输入数据-1-1\" class=\"headerlink\" title=\"输入数据 1\"></a>输入数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">-100 -1 -10</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-1-1\"><a href=\"#输出数据-1-1\" class=\"headerlink\" title=\"输出数据 1\"></a>输出数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"解释-1\"><a href=\"#解释-1\" class=\"headerlink\" title=\"解释 #1\"></a>解释 #1</h5><p>一直都在反向移动，最远的位置就是 0。</p>\n<h5 id=\"输入数据-2\"><a href=\"#输入数据-2\" class=\"headerlink\" title=\"输入数据 2\"></a>输入数据 2</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">-1 2 1 -3</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-2\"><a href=\"#输出数据-2\" class=\"headerlink\" title=\"输出数据 2\"></a>输出数据 2</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"解释-2\"><a href=\"#解释-2\" class=\"headerlink\" title=\"解释 #2\"></a>解释 #2</h5><ul>\n<li>第一步移动到 −1 的位置。</li>\n<li>第二步先移动到 −2 的位置，再移动到 0 的位置。</li>\n<li>第三步先移动到 −1 的位置，再移动到 1 的位置，最后移动到 2 的位置。</li>\n<li>第四步先移动到 1 的位置，再移动到 3 的位置，再移动到 4 的位置，最后移动到 1 的位置。</li>\n</ul>\n<h4 id=\"数据范围-1\"><a href=\"#数据范围-1\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><ul>\n<li>1≤N≤200000</li>\n<li>-10<sup>8</sup> ≤ A<sub>i</sub>≤10<sup>8</sup></li>\n</ul>\n<p>这题的难点在于（1）机器人并不是移动完毕才是最大正向距离，而在移动途中也有可能到达最大正向距离。（2）数据范围需要使用long long。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> num[N];</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> sum[N];</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> maxi[N];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; num[i];</span><br><span class=\"line\">        sum[i] = sum[i - <span class=\"number\">1</span>] + num[i];</span><br><span class=\"line\">        <span class=\"comment\">// 记录移动过程中的最大正向距离</span></span><br><span class=\"line\">        maxi[i] = <span class=\"built_in\">max</span>(maxi[i - <span class=\"number\">1</span>], sum[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> curPos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> maxPos = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        maxPos = <span class=\"built_in\">max</span>(maxPos, maxi[i] + curPos);</span><br><span class=\"line\">        curPos += sum[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; maxPos;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>能简化为一个循环：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">const int N = 2e5 + 10;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    long long num;</span><br><span class=\"line\">    long long sum[N];</span><br><span class=\"line\">    long long curPos = 0;</span><br><span class=\"line\">    long long maxPos = 0;</span><br><span class=\"line\">    long long maxi = LLONG_MIN; // 初始化最大值为最小的 long long 值</span><br><span class=\"line\">    </span><br><span class=\"line\">    for(int i = 1; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; num;</span><br><span class=\"line\">        sum[i] = sum[i - 1] + num;</span><br><span class=\"line\">        maxi = max(maxi, sum[i]); // 维护最大值</span><br><span class=\"line\">        maxPos = max(maxPos, maxi + curPos);</span><br><span class=\"line\">        curPos += sum[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; maxPos;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-抓娃娃（编程题）\"><a href=\"#3-抓娃娃（编程题）\" class=\"headerlink\" title=\"3. 抓娃娃（编程题）\"></a>3. 抓娃娃（编程题）</h3><h4 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>小明拿了 n 条线段练习抓娃娃。他将所有线段铺在数轴上，第 i 条线段的左端点在  l<sub>i</sub>，右端点在 r<sub>i</sub>。小明用 m个区间去框这些线段，第 i 个区间的范围是 L<sub>i</sub>，R<sub>i</sub>。如果一个线段有 <strong>至少一半</strong> 的长度被包含在某个区间内，则将其视为被这个区间框住。请计算出每个区间框住了多少个线段？</p>\n<h4 id=\"输入格式-2\"><a href=\"#输入格式-2\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>输入共 n+m+1行。</p>\n<p>第一行为两个正整数 n,m。</p>\n<p>后面 n行，每行两个整数 l<sub>i</sub>，r<sub>i</sub>。</p>\n<p>后面 m行，每行两个整数 L<sub>i</sub>，R<sub>i</sub>。</p>\n<h4 id=\"输出格式-2\"><a href=\"#输出格式-2\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出共 m行，每行一个整数。</p>\n<h4 id=\"样例-2\"><a href=\"#样例-2\" class=\"headerlink\" title=\"样例\"></a>样例</h4><h5 id=\"输入数据-1-2\"><a href=\"#输入数据-1-2\" class=\"headerlink\" title=\"输入数据 1\"></a>输入数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 2</span><br><span class=\"line\">1 2</span><br><span class=\"line\">1 3</span><br><span class=\"line\">3 4</span><br><span class=\"line\">1 4</span><br><span class=\"line\">2 4</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-1-2\"><a href=\"#输出数据-1-2\" class=\"headerlink\" title=\"输出数据 1\"></a>输出数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据范围-2\"><a href=\"#数据范围-2\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><ul>\n<li>对于 20% 的数据，保证 n,m≤10<sup>3</sup>。</li>\n<li>对于 100% 的数据，保证 n,m≤10<sup>5</sup>，l<sub>i</sub> &lt; r<sub>i</sub>，0 &lt; l<sub>i</sub>，r<sub>i</sub>，L<sub>i</sub>，R<sub>i</sub> &lt; 10<sup>6</sup>，max{r<sub>i</sub> - l<sub>i</sub>} ≤ min{R<sub>i</sub> - L<sub>i</sub>} 。</li>\n</ul>\n<p><strong>分析：</strong>根据数据范围max{r<sub>i</sub> - l<sub>i</sub>} ≤ min{R<sub>i</sub> - L<sub>i</sub>} 可知 区间包含在线段中的情况不可能存在。所以哪怕最长的线段长度也是小于区间的大小。可以将剩余三种情况列出来if - else if - else来分类计算。</p>\n<p>根据题目所说“如果一个线段有 <strong>至少一半</strong> 的长度被包含在某个区间内，则将其视为被这个区间框住”，我们可以得到一下的结论</p>\n<ul>\n<li>如果区间可以框住线段的话，一定包含这个线段的中点</li>\n</ul>\n<p>这样写能通过前两个测试点，后续的测试点超时。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算一个区间框住了多少个线段</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">count</span><span class=\"params\">( list&lt;<span class=\"type\">int</span>&gt; &amp;mid, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; &amp;box)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> &amp; it : mid)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(it &gt;= box.first &amp;&amp; it &lt;= box.second)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 线段</span></span><br><span class=\"line\">    list&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; line;</span><br><span class=\"line\">    <span class=\"comment\">// 线段的中点</span></span><br><span class=\"line\">    list&lt;<span class=\"type\">int</span>&gt; mid;</span><br><span class=\"line\">    <span class=\"comment\">// 框线段的左右端点</span></span><br><span class=\"line\">    list&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; box;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 线段至少有一半被框框住，就视为被这个区间框住</span></span><br><span class=\"line\">    <span class=\"comment\">// 说明这个线段如果被框住，那么他的中点一定在框里面</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 记录线段</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        line.<span class=\"built_in\">emplace_back</span>(l, r);</span><br><span class=\"line\">        mid.<span class=\"built_in\">push_back</span>((l + r) / <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 记录框线段</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        box.<span class=\"built_in\">emplace_back</span>(l, r);</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"built_in\">count</span>(mid, box.<span class=\"built_in\">back</span>()) &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>优化</strong>：由于在for循环里每个循环都调用了count方法，使得时间复杂度变为了O(m * n)。要想压缩时间复杂度我们可以用一个数组来存储相同的中点个数。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">    a[(l + r) / <span class=\"number\">2</span>]++;<span class=\"comment\">//标记中点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是这样会带来一个问题：(l + r) &#x2F; 2 的值可能是小数，而小数是不能作数组的下标的。我们可以利用乘法将中点先乘 2，这样可以巧妙避免小数带来的影响。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">    a[l + r]++;<span class=\"comment\">//标记中点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>处理好桶标记之后，我们需要求一个前缀和数组 s 记录范围内线段中点的数量，最后求一下 s[r]−s[l−1]也就是区间内有多少个线段中点即可。但由于之前中点乘以 2 的影响我们也需要将区间的左端点和有端点乘以 2 也就是 s[r∗2]−s[l∗2−1]。</p>\n<p>**TIPS:**将数组声明放在 main 函数外面可以大幅提升速度的原因是因为它们会被分配在全局&#x2F;静态内存区域，而不是栈内存中。全局&#x2F;静态内存区域的分配和访问速度通常比栈内存更快，尤其是当数组非常大时。</p>\n<p>在C++中，局部变量（如在 main 函数内声明的变量）通常分配在栈上，而全局变量或静态变量分配在全局&#x2F;静态内存区域。栈内存的大小是有限的，通常只有几MB，而全局&#x2F;静态内存区域的大小可以更大。  </p>\n<p>将数组声明放在 main 函数外面，可以避免栈溢出，并且全局&#x2F;静态内存区域的访问速度更快，从而提升程序的性能。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在 2e6 + 10 中，e 代表科学计数法中的“指数”。它表示 (2 \\times 10^6)，即 2,000,000。加上 10 后的值是 2,000,010。</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">// 线段的中点</span></span><br><span class=\"line\"><span class=\"type\">int</span> mid[N];</span><br><span class=\"line\"><span class=\"comment\">// 前缀和数组</span></span><br><span class=\"line\"><span class=\"type\">int</span> sum[N];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 线段中点桶标记</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        mid[l + r]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 前缀和数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">2e6</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 表示从0到i一共有多少个中点</span></span><br><span class=\"line\">        sum[i] = sum[i - <span class=\"number\">1</span>] + mid[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> L, R;</span><br><span class=\"line\">        cin &gt;&gt; L &gt;&gt; R;</span><br><span class=\"line\">        <span class=\"comment\">// 由于给中点做桶标记的时候是乘了2的，所以这里也要乘2</span></span><br><span class=\"line\">        cout &lt;&lt; sum[<span class=\"number\">2</span> * R] - sum[<span class=\"number\">2</span> * L - <span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-加法的和\"><a href=\"#4-加法的和\" class=\"headerlink\" title=\"4.加法的和\"></a>4.加法的和</h3><h4 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>有一天小D突发奇想，把十进制加法的定义重新改变，比如 <em>f</em>(114,514)&#x3D;114514。</p>\n<p>现在有 n个正整数，a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub>，请问<br>$$<br>\\sum_{i&#x3D;1}^{n - 1} \\sum_{j&#x3D;i + 1}^{n} f(a_i, a_j) \\quad<br>$$<br> 等于多少，最后的结果对 998244353998244353 取余。</p>\n<h4 id=\"输入格式-3\"><a href=\"#输入格式-3\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行为一个正整数 n，代表有 n个正整数。</p>\n<p>第二行为 n个正整数 a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub>。</p>\n<h4 id=\"输出格式-3\"><a href=\"#输出格式-3\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行，一个整数表示答案。</p>\n<h4 id=\"样例-3\"><a href=\"#样例-3\" class=\"headerlink\" title=\"样例\"></a>样例</h4><h5 id=\"输入数据-1-3\"><a href=\"#输入数据-1-3\" class=\"headerlink\" title=\"输入数据 1\"></a>输入数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">11 14 9</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-1-3\"><a href=\"#输出数据-1-3\" class=\"headerlink\" title=\"输出数据 1\"></a>输出数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1382</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"解释-1-1\"><a href=\"#解释-1-1\" class=\"headerlink\" title=\"解释 #1\"></a>解释 #1</h5><ul>\n<li>f(a<sub>1</sub>,a<sub>2</sub>)&#x3D;1114</li>\n<li>f(a<sub>1</sub>,a<sub>3</sub>)&#x3D;119</li>\n<li>f(a<sub>2</sub>,a<sub>3</sub>)&#x3D;149</li>\n</ul>\n<p>f(a<sub>1</sub>,a<sub>2</sub>)+f(a<sub>1</sub>,a<sub>3</sub>)+f(a<sub>2</sub>,a<sub>3</sub>)&#x3D;1382</p>\n<h4 id=\"数据范围-3\"><a href=\"#数据范围-3\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><ul>\n<li>2≤N≤2×10<sup>5</sup></li>\n<li>1≤A<sub>i</sub>≤10<sup>9</sup></li>\n</ul>\n<p><strong>分析：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"type\">int</span> num[N], sum[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; num[i];</span><br><span class=\"line\">        sum[i] = sum[i - <span class=\"number\">1</span>] + num[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string temp = <span class=\"built_in\">to_string</span>(num[i]);</span><br><span class=\"line\">        <span class=\"type\">int</span> len = temp.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> mul = <span class=\"built_in\">pow</span>(<span class=\"number\">10</span>, len);</span><br><span class=\"line\">        res = (res + ((sum[i - <span class=\"number\">1</span>] % mod) * (mul % mod) % mod) + (i - <span class=\"number\">1</span>) * num[i]) % mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-特殊质数\"><a href=\"#5-特殊质数\" class=\"headerlink\" title=\"5. 特殊质数\"></a>5. 特殊质数</h3><p>小D发现了一种特殊的质数，满足如下两个条件可以称为一个特殊的质数：</p>\n<ul>\n<li>x 是一个奇数</li>\n<li>x和 (x+1)&#x2F;2都是质数</li>\n</ul>\n<p>现在有 q次询问，询问区间 [l<sub>i</sub>,r<sub>i</sub>]之间有多少个特殊的质数</p>\n<h4 id=\"输入格式-4\"><a href=\"#输入格式-4\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行为一个正整数 q，代表有 q次询问。</p>\n<p>接下来 q行每行有两个正整数l<sub>i</sub>和r<sub>i</sub>，表示区间 [l<sub>i</sub>,r<sub>i</sub>]。</p>\n<h4 id=\"输出格式-4\"><a href=\"#输出格式-4\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行，一个整数表示答案。</p>\n<h4 id=\"样例-4\"><a href=\"#样例-4\" class=\"headerlink\" title=\"样例\"></a>样例</h4><h5 id=\"输入数据-1-4\"><a href=\"#输入数据-1-4\" class=\"headerlink\" title=\"输入数据 1\"></a>输入数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3 7</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"输出数据-1-4\"><a href=\"#输出数据-1-4\" class=\"headerlink\" title=\"输出数据 1\"></a>输出数据 1</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"解释-1-2\"><a href=\"#解释-1-2\" class=\"headerlink\" title=\"解释 #1\"></a>解释 #1</h5><ul>\n<li>3是奇数，同时 3和 (3+1)&#x2F;2&#x3D;2都是质数</li>\n<li>5是奇数，同时 5和 (5+1)&#x2F;2&#x3D;3都是质数</li>\n</ul>\n<h5 id=\"输入数据-2-1\"><a href=\"#输入数据-2-1\" class=\"headerlink\" title=\"输入数据 2\"></a>输入数据 2</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">1 53</span><br><span class=\"line\">13 91</span><br><span class=\"line\">37 55</span><br><span class=\"line\">19 51</span><br><span class=\"line\">73 91</span><br><span class=\"line\">13 49</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"输出数据-2-1\"><a href=\"#输出数据-2-1\" class=\"headerlink\" title=\"输出数据 2\"></a>输出数据 2</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">4</span><br><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据范围-4\"><a href=\"#数据范围-4\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><ul>\n<li>1≤Q≤10<sup>5</sup></li>\n<li>1≤l<sub>i</sub>&lt;≤r<sub>i</sub>≤10<sup>5</sup></li>\n<li>l<sub>i</sub>和 r<sub>i</sub>都是奇数</li>\n</ul>\n<p>分析：暴力遍历区间，不出意外全部超时。其实这道题的数据范围比较小，最大也只有10<sup>5</sup>,因此我们可以将1到10000的所有特殊质数预处理在前缀和数组里面。在由输入的l和r来调用前缀和数组的区间。</p>\n<p>暴力遍历：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断是不是奇数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isOdd</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n % <span class=\"number\">2</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 是奇数</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断是不是质数 时间复杂度为n</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= <span class=\"built_in\">sqrt</span>(n); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n % i == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isSpecialPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// x是奇数 x和（x+1）/2是质数 ，则这个数是特殊质数</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">isOdd</span>(n) &amp;&amp; <span class=\"built_in\">isPrime</span>(n) &amp;&amp; <span class=\"built_in\">isPrime</span>((n+<span class=\"number\">1</span>)/<span class=\"number\">2</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">SpecialPrimeCount</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = l; i &lt;= r; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">isSpecialPrime</span>(i))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcount++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> l, r, q;</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 时间复杂度为n</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; q; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"built_in\">SpecialPrimeCount</span>(l, r) &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>前缀和：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isOdd</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 閺勵垰顨岄弫?</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= <span class=\"built_in\">sqrt</span>(n); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n % i == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">IsSpecialPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">isOdd</span>(n) &amp;&amp; <span class=\"built_in\">isPrime</span>(n) &amp;&amp; <span class=\"built_in\">isPrime</span>((n+<span class=\"number\">1</span>)/<span class=\"number\">2</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">SpecialPrimeCount</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = l; i &lt;= r; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">IsSpecialPrime</span>(i))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> specialPrimeSum[<span class=\"number\">100010</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构建前缀和数组</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    specialPrimeSum[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100000</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">IsSpecialPrime</span>(i))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            specialPrimeSum[i] = specialPrimeSum[i - <span class=\"number\">1</span>] + <span class=\"built_in\">IsSpecialPrime</span>(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> l, r, q;</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">        specialPrimeSum[i] = specialPrimeSum[i - <span class=\"number\">1</span>] + <span class=\"built_in\">IsSpecialPrime</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; q; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; specialPrimeSum[r] - specialPrimeSum[l - <span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","text":"前缀和一维前缀和1.定义 对于一维前缀和来说，前缀和是这个数组的某个下标之前的（包括当前下标对应的元素）所有元素之和。 声明一个数组 a[]。 数组 a[]的前...","permalink":"/post/前缀和","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"算法学习","slug":"算法学习","count":1,"path":"api/tags/算法学习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">前缀和</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">一维前缀和</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%EF%BC%9A\"><span class=\"toc-text\">题目：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%80%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">1.一维前缀和</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">输入数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">输出数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">数据范围</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-dash%E4%B8%8E%E6%9C%BA%E5%99%A8%E4%BA%BA\"><span class=\"toc-text\">2.dash与机器人</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F-1\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F-1\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B-1\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-1-1\"><span class=\"toc-text\">输入数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-1-1\"><span class=\"toc-text\">输出数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A-1\"><span class=\"toc-text\">解释 #1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-2\"><span class=\"toc-text\">输入数据 2</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-2\"><span class=\"toc-text\">输出数据 2</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A-2\"><span class=\"toc-text\">解释 #2</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4-1\"><span class=\"toc-text\">数据范围</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8A%93%E5%A8%83%E5%A8%83%EF%BC%88%E7%BC%96%E7%A8%8B%E9%A2%98%EF%BC%89\"><span class=\"toc-text\">3. 抓娃娃（编程题）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F-2\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F-2\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B-2\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-1-2\"><span class=\"toc-text\">输入数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-1-2\"><span class=\"toc-text\">输出数据 1</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4-2\"><span class=\"toc-text\">数据范围</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8A%A0%E6%B3%95%E7%9A%84%E5%92%8C\"><span class=\"toc-text\">4.加法的和</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F-3\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F-3\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B-3\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-1-3\"><span class=\"toc-text\">输入数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-1-3\"><span class=\"toc-text\">输出数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A-1-1\"><span class=\"toc-text\">解释 #1</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4-3\"><span class=\"toc-text\">数据范围</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E7%89%B9%E6%AE%8A%E8%B4%A8%E6%95%B0\"><span class=\"toc-text\">5. 特殊质数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F-4\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F-4\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B-4\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-1-4\"><span class=\"toc-text\">输入数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-1-4\"><span class=\"toc-text\">输出数据 1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A-1-2\"><span class=\"toc-text\">解释 #1</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE-2-1\"><span class=\"toc-text\">输入数据 2</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE-2-1\"><span class=\"toc-text\">输出数据 2</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4-4\"><span class=\"toc-text\">数据范围</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"sasigiii","slug":"blog-author","avatar":"\\images\\头像.PNG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Sasigiii","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Socket基础","uid":"514d1808d25e64b8077292b0b40d87f8","slug":"Socket学习记录","date":"2023-11-07T12:41:10.000Z","updated":"2024-12-08T14:02:09.078Z","comments":true,"path":"api/articles/Socket学习记录.json","keywords":null,"cover":[],"text":"Socket基础客户端：1. Socket的初始化与连接操作12345678910private Socket _socket; void Start()&#1...","permalink":"/post/Socket学习记录","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"Unity网络开发","slug":"Unity网络开发","count":2,"path":"api/tags/Unity网络开发.json"}],"author":{"name":"sasigiii","slug":"blog-author","avatar":"\\images\\头像.PNG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Sasigiii","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Unity中寻路方法的客户端和服务端使用","uid":"6b1fbd4218c627ebe69e7d6fff287d2a","slug":"Unity中寻路方法的客户端和服务端使用","date":"2023-11-07T12:41:10.000Z","updated":"2024-12-08T14:03:44.440Z","comments":true,"path":"api/articles/Unity中寻路方法的客户端和服务端使用.json","keywords":null,"cover":[],"text":"AStar寻路:前言：在Unity3D中有一个内置的寻路解决方案：NavMeshes和NavMesh Agents。NavMeshes被用在可以行走的几何图形表...","permalink":"/post/Unity中寻路方法的客户端和服务端使用","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Unity开发","slug":"Unity开发","count":2,"path":"api/tags/Unity开发.json"}],"author":{"name":"sasigiii","slug":"blog-author","avatar":"\\images\\头像.PNG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Sasigiii","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"","customs":{}}}}}